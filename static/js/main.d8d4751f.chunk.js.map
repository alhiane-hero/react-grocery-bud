{"version":3,"sources":["components/List/List.js","components/Alert/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["List","list","editItem","deleteItem","map","item","id","title","className","onClick","_","Alert","type","msg","removeAlert","useEffect","timeout","window","setTimeout","clearTimeout","App","useState","name","setName","localStorage","getItem","JSON","parse","getLocalStorage","setList","isEditing","setIsEditing","editID","setEditID","show","alert","setAlert","showAlert","setItem","stringify","onSubmit","e","preventDefault","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","spcItem","find","newList","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8d4751f.chunk.js","sourcesContent":["import { FaEdit, FaTrash } from 'react-icons/fa';\nimport './List.css';\n\nfunction List({list, editItem, deleteItem}) {\n    return (\n        <>{\n            list.map((item) => {\n                const {id, title} = item;\n                return (\n                    <div key={id} className='item'>\n                        <h3 className='itemTitle'>{title}</h3>\n                        <div className='btns'>\n                            <button className='btn editBtn'\n                                onClick={_ => editItem(id)}>\n                                <FaEdit />\n                            </button>\n                            <button className='btn deleteBtn'\n                                onClick={_ => deleteItem(id)}>\n                                <FaTrash />\n                            </button>\n                        </div>\n                    </div>\n                );\n            })\n        }</>\n    );\n}\n\nexport default List;\n","import { useEffect } from \"react\";\nimport './Alert.css';\n\nfunction Alert({type, msg, removeAlert, list}) {\n    useEffect(_ => {\n        const timeout = window.setTimeout(_ => {\n            removeAlert();\n        }, 3000);\n        return _ => clearTimeout(timeout);\n    }, [list]);\n    return <p className={`alert alert-${type}`}>{msg}</p>\n}\n\nexport default Alert;\n","import {useEffect, useState} from 'react';\nimport List from './components/List/List';\nimport Alert from './components/Alert/Alert';\nimport './App.css';\n\nfunction App() {\n  const getLocalStorage = _ => {\n    let list = localStorage.getItem('item');\n    if (list) {\n      return list = JSON.parse(localStorage.getItem('item'));\n    }\n    return [];\n  }\n\n  const [name, setName] = useState('');\n  const [list, setList] = useState(getLocalStorage());\n  const [isEditing, setIsEditing] = useState(false);\n  const [editID, setEditID] = useState(null);\n  const [alert, setAlert] = useState({ show: false, type: '', msg: ''});\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!name) {\n      showAlert(true, 'danger', 'Please Enter Value');\n    } else if (name && isEditing) {\n      setList(\n        list.map(item => {\n          if (item.id === editID) {\n            return {...item, title: name}\n          }\n          return item;\n        })\n      );\n      setEditID(null);\n      setName('');\n      showAlert(true, 'success', 'value changed');\n    } else {\n      const newItem = {id: new Date().getTime().toString(), title: name};\n      setList([...list, newItem]);\n      setName('');\n      showAlert(true, 'success', 'Item Added To The List')\n    }\n  }\n\n  const showAlert = (show = false, type = '', msg = '') => {\n    setAlert({show, type, msg});\n  }\n\n  const deleteItem = id => {\n    const newList = list.filter(item => item.id !== id);\n    setList(newList);\n    showAlert(true, 'danger', 'Item Removed');\n  }\n\n  const editItem = id => {\n    const spcItem = list.find(item => item.id === id);\n    setIsEditing(true);\n    setEditID(id);\n    setName(spcItem.title);\n  }\n\n  const clearList = _ => {\n    setList([]);\n    showAlert(true, 'danger', 'Empty List');\n  }\n\n  useEffect(_ => {\n    localStorage.setItem('item', JSON.stringify(list));\n  }, [list]);\n\n  return (\n    <div className=\"App\">\n      <div className='container'>\n        <form onSubmit={handleSubmit}>\n          {alert.show && <Alert {...alert} \n            removeAlert={showAlert}\n            list={list}/>}\n          <h3 className='title'>Grocery Bud</h3>\n          <div className='inputBox'>\n            <input type='text'\n              placeholder='e.g eggs'\n              value={name}\n              onChange={e => setName(e.target.value)} />\n              <input type='submit'\n                value={isEditing ? 'Edit Item' : 'Add Item'} />\n          </div>\n        </form>\n        {list.length > 0 && (\n          <div className='items'>\n            <List list={list} editItem={editItem} deleteItem={deleteItem} />\n            <button className='clearBtn'\n              onClick={clearList}>\n              Clear Items\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}